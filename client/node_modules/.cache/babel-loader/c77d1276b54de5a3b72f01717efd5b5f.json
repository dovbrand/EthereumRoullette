{"ast":null,"code":"var _jsxFileName = \"/Users/MMayaguari/Documents/GitHub/EthereumRoullette/client/src/components/Wheeel.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from 'react';\nimport { Wheel } from 'react-custom-roulette';\nimport './Wheeel.css';\nimport Web3 from 'web3';\nimport { ROU_ABI, ROU_ADDRESS } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst wheelData = [{\n  option: '32'\n}, {\n  option: '15'\n}, {\n  option: '19'\n}, {\n  option: '4'\n}, {\n  option: '21'\n}, {\n  option: '2'\n}, {\n  option: '25'\n}, {\n  option: '17'\n}, {\n  option: '34'\n}, {\n  option: '6'\n}, {\n  option: '27'\n}, {\n  option: '13'\n}, {\n  option: '36'\n}, {\n  option: '11'\n}, {\n  option: '30'\n}, {\n  option: '8'\n}, {\n  option: '23'\n}, {\n  option: '10'\n}, {\n  option: '5'\n}, {\n  option: '24'\n}, {\n  option: '16'\n}, {\n  option: '33'\n}, {\n  option: '1'\n}, {\n  option: '20'\n}, {\n  option: '14'\n}, {\n  option: '31'\n}, {\n  option: '9'\n}, {\n  option: '22'\n}, {\n  option: '18'\n}, {\n  option: '29'\n}, {\n  option: '7'\n}, {\n  option: '28'\n}, {\n  option: '12'\n}, {\n  option: '35'\n}, {\n  option: '3'\n}, {\n  option: '26'\n}, {\n  option: '0',\n  style: {\n    backgroundColor: '#F0F0EE',\n    textColor: '#29313D'\n  }\n}];\nconst backgroundColors = ['#A91607', '#3a4353'];\nconst textColors = ['#F0F0EE'];\nconst outerBorderColor = '#29313D';\nconst outerBorderWidth = 7;\nconst innerBorderColor = '#29313D';\nconst innerBorderWidth = 20;\nconst innerRadius = 60;\nconst radiusLineColor = '#29313D';\nconst radiusLineWidth = 3;\nconst fontSize = 16;\nconst textDistance = 85;\nconst web3 = new Web3(Web3.givenProvider);\nconst rou = new web3.eth.Contract(ROU_ABI, ROU_ADDRESS);\nexport default function Wheeel() {\n  _s();\n\n  const [mustSpin, setMustSpin] = useState(false);\n  const [prizeNumber, setPrizeNumber] = useState(0);\n  const [perpendicularText, setperpendicularText] = useState(true);\n\n  const handleSpinClick = () => {\n    setPrizeNumber(10); // rou.methods.WinningNumber().call().then(\n    //     data => setPrizeNumber( data )\n    // )\n\n    console.log(\"Winning Number is: \" + prizeNumber);\n    setMustSpin(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wheel\",\n    children: [/*#__PURE__*/_jsxDEV(Wheel, {\n      mustStartSpinning: mustSpin,\n      prizeNumber: prizeNumber,\n      wheelData: wheelData,\n      backgroundColors: backgroundColors,\n      textColors: textColors,\n      fontSize: fontSize,\n      outerBorderColor: outerBorderColor,\n      outerBorderWidth: outerBorderWidth,\n      innerRadius: innerRadius,\n      innerBorderColor: innerBorderColor,\n      innerBorderWidth: innerBorderWidth,\n      radiusLineColor: radiusLineColor,\n      radiusLineWidth: radiusLineWidth,\n      perpendicularText: perpendicularText,\n      textDistance: textDistance,\n      onStopSpinning: () => {\n        setMustSpin(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: 'spin-button btn btn-danger btn-block',\n      onClick: handleSpinClick,\n      children: \"Spin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Wheeel, \"9662hWoT0Ov2wMV4bzJioFGoBcw=\");\n\n_c = Wheeel;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wheeel\");","map":{"version":3,"sources":["/Users/MMayaguari/Documents/GitHub/EthereumRoullette/client/src/components/Wheeel.js"],"names":["React","useState","Wheel","Web3","ROU_ABI","ROU_ADDRESS","wheelData","option","style","backgroundColor","textColor","backgroundColors","textColors","outerBorderColor","outerBorderWidth","innerBorderColor","innerBorderWidth","innerRadius","radiusLineColor","radiusLineWidth","fontSize","textDistance","web3","givenProvider","rou","eth","Contract","Wheeel","mustSpin","setMustSpin","prizeNumber","setPrizeNumber","perpendicularText","setperpendicularText","handleSpinClick","console","log"],"mappings":";;;AAAA,SAAQA,KAAR,EAAeC,QAAf,QAA+B,OAA/B;AACA,SAASC,KAAT,QAAsB,uBAAtB;AACA,OAAO,cAAP;AAEA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,WAArC;;AAEA,MAAMC,SAAS,GAAG,CACd;AAAEC,EAAAA,MAAM,EAAE;AAAV,CADc,EAEd;AAAEA,EAAAA,MAAM,EAAE;AAAV,CAFc,EAGd;AAAEA,EAAAA,MAAM,EAAE;AAAV,CAHc,EAId;AAAEA,EAAAA,MAAM,EAAE;AAAV,CAJc,EAKd;AAAEA,EAAAA,MAAM,EAAE;AAAV,CALc,EAMd;AAAEA,EAAAA,MAAM,EAAE;AAAV,CANc,EAOd;AAAEA,EAAAA,MAAM,EAAE;AAAV,CAPc,EAQd;AAAEA,EAAAA,MAAM,EAAE;AAAV,CARc,EASd;AAAEA,EAAAA,MAAM,EAAE;AAAV,CATc,EAUd;AAAEA,EAAAA,MAAM,EAAE;AAAV,CAVc,EAWd;AAAEA,EAAAA,MAAM,EAAE;AAAV,CAXc,EAYd;AAAEA,EAAAA,MAAM,EAAE;AAAV,CAZc,EAad;AAAEA,EAAAA,MAAM,EAAE;AAAV,CAbc,EAcd;AAAEA,EAAAA,MAAM,EAAE;AAAV,CAdc,EAed;AAAEA,EAAAA,MAAM,EAAE;AAAV,CAfc,EAgBd;AAAEA,EAAAA,MAAM,EAAE;AAAV,CAhBc,EAiBd;AAAEA,EAAAA,MAAM,EAAE;AAAV,CAjBc,EAkBd;AAAEA,EAAAA,MAAM,EAAE;AAAV,CAlBc,EAmBd;AAAEA,EAAAA,MAAM,EAAE;AAAV,CAnBc,EAoBd;AAAEA,EAAAA,MAAM,EAAE;AAAV,CApBc,EAqBd;AAAEA,EAAAA,MAAM,EAAE;AAAV,CArBc,EAsBd;AAAEA,EAAAA,MAAM,EAAE;AAAV,CAtBc,EAuBd;AAAEA,EAAAA,MAAM,EAAE;AAAV,CAvBc,EAwBd;AAAEA,EAAAA,MAAM,EAAE;AAAV,CAxBc,EAyBd;AAAEA,EAAAA,MAAM,EAAE;AAAV,CAzBc,EA0Bd;AAAEA,EAAAA,MAAM,EAAE;AAAV,CA1Bc,EA2Bd;AAAEA,EAAAA,MAAM,EAAE;AAAV,CA3Bc,EA4Bd;AAAEA,EAAAA,MAAM,EAAE;AAAV,CA5Bc,EA6Bd;AAAEA,EAAAA,MAAM,EAAE;AAAV,CA7Bc,EA8Bd;AAAEA,EAAAA,MAAM,EAAE;AAAV,CA9Bc,EA+Bd;AAAEA,EAAAA,MAAM,EAAE;AAAV,CA/Bc,EAgCd;AAAEA,EAAAA,MAAM,EAAE;AAAV,CAhCc,EAiCd;AAAEA,EAAAA,MAAM,EAAE;AAAV,CAjCc,EAkCd;AAAEA,EAAAA,MAAM,EAAE;AAAV,CAlCc,EAmCd;AAAEA,EAAAA,MAAM,EAAE;AAAV,CAnCc,EAoCd;AAAEA,EAAAA,MAAM,EAAE;AAAV,CApCc,EAqCd;AAAEA,EAAAA,MAAM,EAAE,GAAV;AAAeC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,eAAe,EAAE,SAAnB;AAA8BC,IAAAA,SAAS,EAAE;AAAzC;AAAtB,CArCc,CAAlB;AAyCA,MAAMC,gBAAgB,GAAG,CAAC,SAAD,EAAY,SAAZ,CAAzB;AACA,MAAMC,UAAU,GAAG,CAAC,SAAD,CAAnB;AACA,MAAMC,gBAAgB,GAAG,SAAzB;AACA,MAAMC,gBAAgB,GAAG,CAAzB;AACA,MAAMC,gBAAgB,GAAG,SAAzB;AACA,MAAMC,gBAAgB,GAAG,EAAzB;AACA,MAAMC,WAAW,GAAG,EAApB;AACA,MAAMC,eAAe,GAAG,SAAxB;AACA,MAAMC,eAAe,GAAG,CAAxB;AACA,MAAMC,QAAQ,GAAG,EAAjB;AACA,MAAMC,YAAY,GAAG,EAArB;AAEA,MAAMC,IAAI,GAAG,IAAInB,IAAJ,CAASA,IAAI,CAACoB,aAAd,CAAb;AACA,MAAMC,GAAG,GAAG,IAAIF,IAAI,CAACG,GAAL,CAASC,QAAb,CAAsBtB,OAAtB,EAA+BC,WAA/B,CAAZ;AAEA,eAAe,SAASsB,MAAT,GAAkB;AAAA;;AAE/B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B5B,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAAC6B,WAAD,EAAcC,cAAd,IAAgC9B,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAAC+B,iBAAD,EAAoBC,oBAApB,IAA4ChC,QAAQ,CAAC,IAAD,CAA1D;;AAGA,QAAMiC,eAAe,GAAG,MAAM;AAE5BH,IAAAA,cAAc,CAAE,EAAF,CAAd,CAF4B,CAI5B;AACA;AACA;;AAEAI,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwBN,WAApC;AACAD,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAVD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,iBAAiB,EAAED,QADrB;AAEE,MAAA,WAAW,EAAEE,WAFf;AAGE,MAAA,SAAS,EAAExB,SAHb;AAIE,MAAA,gBAAgB,EAAEK,gBAJpB;AAKE,MAAA,UAAU,EAAEC,UALd;AAME,MAAA,QAAQ,EAAEQ,QANZ;AAOE,MAAA,gBAAgB,EAAEP,gBAPpB;AAQE,MAAA,gBAAgB,EAAEC,gBARpB;AASE,MAAA,WAAW,EAAEG,WATf;AAUE,MAAA,gBAAgB,EAAEF,gBAVpB;AAWE,MAAA,gBAAgB,EAAEC,gBAXpB;AAYE,MAAA,eAAe,EAAEE,eAZnB;AAaE,MAAA,eAAe,EAAEC,eAbnB;AAcE,MAAA,iBAAiB,EAAEa,iBAdrB;AAeE,MAAA,YAAY,EAAEX,YAfhB;AAkBE,MAAA,cAAc,EAAE,MAAM;AACpBQ,QAAAA,WAAW,CAAC,KAAD,CAAX;AACD;AApBH;AAAA;AAAA;AAAA;AAAA,YADF,eAuBE;AAAQ,MAAA,SAAS,EAAE,sCAAnB;AAA2D,MAAA,OAAO,EAAEK,eAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;GAhDuBP,M;;KAAAA,M;AAgDvB","sourcesContent":["import {React, useState}  from 'react'\nimport { Wheel } from 'react-custom-roulette'\nimport './Wheeel.css'\n\nimport Web3 from 'web3';\nimport { ROU_ABI, ROU_ADDRESS } from '../config'\n\nconst wheelData = [\n    { option: '32' },\n    { option: '15' },\n    { option: '19'},\n    { option: '4' },\n    { option: '21' },\n    { option: '2' },\n    { option: '25' },\n    { option: '17' },\n    { option: '34' },\n    { option: '6' },\n    { option: '27' },\n    { option: '13' },\n    { option: '36' },\n    { option: '11' },\n    { option: '30' },\n    { option: '8' },\n    { option: '23' },\n    { option: '10' },\n    { option: '5' },\n    { option: '24' },\n    { option: '16' },\n    { option: '33' },\n    { option: '1' },\n    { option: '20' },\n    { option: '14' },\n    { option: '31' },\n    { option: '9' },\n    { option: '22' },\n    { option: '18' },\n    { option: '29' },\n    { option: '7' },\n    { option: '28' },\n    { option: '12' },\n    { option: '35' },\n    { option: '3' },\n    { option: '26' },\n    { option: '0', style: { backgroundColor: '#F0F0EE', textColor: '#29313D'}  },\n    \n  ];\n  \nconst backgroundColors = ['#A91607', '#3a4353'];\nconst textColors = ['#F0F0EE'];\nconst outerBorderColor = '#29313D';\nconst outerBorderWidth = 7;\nconst innerBorderColor = '#29313D';\nconst innerBorderWidth = 20;\nconst innerRadius = 60;\nconst radiusLineColor = '#29313D';\nconst radiusLineWidth = 3;\nconst fontSize = 16;\nconst textDistance = 85;\n\nconst web3 = new Web3(Web3.givenProvider);\nconst rou = new web3.eth.Contract(ROU_ABI, ROU_ADDRESS)\n\nexport default function Wheeel (){\n  \n  const [mustSpin, setMustSpin] = useState(false);\n  const [prizeNumber, setPrizeNumber] = useState(0);\n  const [perpendicularText, setperpendicularText] = useState(true);\n\n  \n  const handleSpinClick = () => {\n\n    setPrizeNumber( 10 )\n\n    // rou.methods.WinningNumber().call().then(\n    //     data => setPrizeNumber( data )\n    // )\n\n    console.log(\"Winning Number is: \" + prizeNumber)\n    setMustSpin(true)\n  }\n\n  return (\n    <div className='wheel'>\n      <Wheel\n        mustStartSpinning={mustSpin}\n        prizeNumber={prizeNumber}\n        wheelData={wheelData}\n        backgroundColors={backgroundColors}\n        textColors={textColors}\n        fontSize={fontSize}\n        outerBorderColor={outerBorderColor}\n        outerBorderWidth={outerBorderWidth}\n        innerRadius={innerRadius}\n        innerBorderColor={innerBorderColor}\n        innerBorderWidth={innerBorderWidth}\n        radiusLineColor={radiusLineColor}\n        radiusLineWidth={radiusLineWidth}\n        perpendicularText={perpendicularText}\n        textDistance={textDistance}\n    \n\n        onStopSpinning={() => {\n          setMustSpin(false)\n        }}\n      />\n      <button className={'spin-button btn btn-danger btn-block'} onClick={handleSpinClick}>\n        Spin\n      </button>\n    </div>\n  );\n};"]},"metadata":{},"sourceType":"module"}