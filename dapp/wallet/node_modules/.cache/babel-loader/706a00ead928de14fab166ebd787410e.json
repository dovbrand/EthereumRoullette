{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\innab\\\\PROJECT\\\\EthereumRoullette\\\\dapp\\\\wallet\\\\src\\\\store.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useReducer, useContext, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StoreContext = /*#__PURE__*/createContext();\nconst initialState = {\n  message: \"\",\n  balance: 0,\n  address: null\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"NEW-ADDRESS\":\n      return { ...state,\n        address: action.address,\n        message: action.message\n      };\n\n    case \"SET-BALANCE\":\n      return { ...state,\n        balance: action.balance\n      };\n\n    default:\n      throw new Error(`Unknown type of action: ${action.type}`);\n  }\n};\n\nexport const StoreProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(StoreContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StoreProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = StoreProvider;\nexport const useStore = () => {\n  _s2();\n\n  return useContext(StoreContext);\n};\n\n_s2(useStore, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreProvider\");","map":{"version":3,"sources":["C:/Users/innab/PROJECT/EthereumRoullette/dapp/wallet/src/store.js"],"names":["React","useReducer","useContext","createContext","StoreContext","initialState","message","balance","address","reducer","state","action","type","Error","StoreProvider","children","dispatch","useStore"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,UAA5B,EAAwCC,aAAxC,QAA6D,OAA7D;;AAEA,MAAMC,YAAY,gBAAGD,aAAa,EAAlC;AACA,MAAME,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,OAAO,EAAE,CAFU;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELF,QAAAA,OAAO,EAAEG,MAAM,CAACH,OAFX;AAGLF,QAAAA,OAAO,EAAEK,MAAM,CAACL;AAHX,OAAP;;AAKF,SAAK,aAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELH,QAAAA,OAAO,EAAEI,MAAM,CAACJ;AAFX,OAAP;;AAIF;AACE,YAAM,IAAIM,KAAJ,CAAW,2BAA0BF,MAAM,CAACC,IAAK,EAAjD,CAAN;AAbJ;AAeD,CAhBD;;AAkBA,OAAO,MAAME,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC7C,QAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBf,UAAU,CAACQ,OAAD,EAAUJ,YAAV,CAApC;AAEA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEK,MAAAA,KAAF;AAASM,MAAAA;AAAT,KAA9B;AAAA,cACGD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CARM;;GAAMD,a;;KAAAA,a;AAUb,OAAO,MAAMG,QAAQ,GAAG;AAAA;;AAAA,SAAMf,UAAU,CAACE,YAAD,CAAhB;AAAA,CAAjB;;IAAMa,Q","sourcesContent":["import React, { useReducer, useContext, createContext } from \"react\";\n\nconst StoreContext = createContext();\nconst initialState = {\n  message: \"\",\n  balance: 0,\n  address: null\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"NEW-ADDRESS\":\n      return {\n        ...state,\n        address: action.address,\n        message: action.message\n      };\n    case \"SET-BALANCE\":\n      return {\n        ...state,\n        balance: action.balance\n      };\n    default:\n      throw new Error(`Unknown type of action: ${action.type}`);\n  }\n};\n\nexport const StoreProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <StoreContext.Provider value={{ state, dispatch }}>\n      {children}\n    </StoreContext.Provider>\n  );\n};\n\nexport const useStore = () => useContext(StoreContext);\n"]},"metadata":{},"sourceType":"module"}