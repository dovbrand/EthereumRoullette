{"ast":null,"code":"export default function updateAutoHeight(speed) {\n  var swiper = this;\n  var activeSlides = [];\n  var newHeight = 0;\n  var i;\n\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  } // Find slides currently in view\n\n\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      swiper.visibleSlides.each(function (slide) {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        var index = swiper.activeIndex + i;\n        if (index > swiper.slides.length) break;\n        activeSlides.push(swiper.slides.eq(index)[0]);\n      }\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  } // Find new height from highest slide in view\n\n\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      var height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  } // Update Height\n\n\n  if (newHeight) swiper.$wrapperEl.css('height', newHeight + \"px\");\n}","map":{"version":3,"sources":["C:/Users/User/EthereumRoullette-mayra/dapp/client/node_modules/swiper/esm/components/core/update/updateAutoHeight.js"],"names":["updateAutoHeight","speed","swiper","activeSlides","newHeight","i","setTransition","params","slidesPerView","centeredSlides","visibleSlides","each","slide","push","Math","ceil","index","activeIndex","slides","length","eq","height","offsetHeight","$wrapperEl","css"],"mappings":"AAAA,eAAe,SAASA,gBAAT,CAA0BC,KAA1B,EAAiC;AAC9C,MAAIC,MAAM,GAAG,IAAb;AACA,MAAIC,YAAY,GAAG,EAAnB;AACA,MAAIC,SAAS,GAAG,CAAhB;AACA,MAAIC,CAAJ;;AAEA,MAAI,OAAOJ,KAAP,KAAiB,QAArB,EAA+B;AAC7BC,IAAAA,MAAM,CAACI,aAAP,CAAqBL,KAArB;AACD,GAFD,MAEO,IAAIA,KAAK,KAAK,IAAd,EAAoB;AACzBC,IAAAA,MAAM,CAACI,aAAP,CAAqBJ,MAAM,CAACK,MAAP,CAAcN,KAAnC;AACD,GAV6C,CAU5C;;;AAGF,MAAIC,MAAM,CAACK,MAAP,CAAcC,aAAd,KAAgC,MAAhC,IAA0CN,MAAM,CAACK,MAAP,CAAcC,aAAd,GAA8B,CAA5E,EAA+E;AAC7E,QAAIN,MAAM,CAACK,MAAP,CAAcE,cAAlB,EAAkC;AAChCP,MAAAA,MAAM,CAACQ,aAAP,CAAqBC,IAArB,CAA0B,UAAUC,KAAV,EAAiB;AACzCT,QAAAA,YAAY,CAACU,IAAb,CAAkBD,KAAlB;AACD,OAFD;AAGD,KAJD,MAIO;AACL,WAAKP,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGS,IAAI,CAACC,IAAL,CAAUb,MAAM,CAACK,MAAP,CAAcC,aAAxB,CAAhB,EAAwDH,CAAC,IAAI,CAA7D,EAAgE;AAC9D,YAAIW,KAAK,GAAGd,MAAM,CAACe,WAAP,GAAqBZ,CAAjC;AACA,YAAIW,KAAK,GAAGd,MAAM,CAACgB,MAAP,CAAcC,MAA1B,EAAkC;AAClChB,QAAAA,YAAY,CAACU,IAAb,CAAkBX,MAAM,CAACgB,MAAP,CAAcE,EAAd,CAAiBJ,KAAjB,EAAwB,CAAxB,CAAlB;AACD;AACF;AACF,GAZD,MAYO;AACLb,IAAAA,YAAY,CAACU,IAAb,CAAkBX,MAAM,CAACgB,MAAP,CAAcE,EAAd,CAAiBlB,MAAM,CAACe,WAAxB,EAAqC,CAArC,CAAlB;AACD,GA3B6C,CA2B5C;;;AAGF,OAAKZ,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,YAAY,CAACgB,MAA7B,EAAqCd,CAAC,IAAI,CAA1C,EAA6C;AAC3C,QAAI,OAAOF,YAAY,CAACE,CAAD,CAAnB,KAA2B,WAA/B,EAA4C;AAC1C,UAAIgB,MAAM,GAAGlB,YAAY,CAACE,CAAD,CAAZ,CAAgBiB,YAA7B;AACAlB,MAAAA,SAAS,GAAGiB,MAAM,GAAGjB,SAAT,GAAqBiB,MAArB,GAA8BjB,SAA1C;AACD;AACF,GAnC6C,CAmC5C;;;AAGF,MAAIA,SAAJ,EAAeF,MAAM,CAACqB,UAAP,CAAkBC,GAAlB,CAAsB,QAAtB,EAAgCpB,SAAS,GAAG,IAA5C;AAChB","sourcesContent":["export default function updateAutoHeight(speed) {\n  var swiper = this;\n  var activeSlides = [];\n  var newHeight = 0;\n  var i;\n\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  } // Find slides currently in view\n\n\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      swiper.visibleSlides.each(function (slide) {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        var index = swiper.activeIndex + i;\n        if (index > swiper.slides.length) break;\n        activeSlides.push(swiper.slides.eq(index)[0]);\n      }\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  } // Find new height from highest slide in view\n\n\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      var height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  } // Update Height\n\n\n  if (newHeight) swiper.$wrapperEl.css('height', newHeight + \"px\");\n}"]},"metadata":{},"sourceType":"module"}