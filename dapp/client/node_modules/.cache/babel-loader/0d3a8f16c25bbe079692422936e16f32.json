{"ast":null,"code":"import { extend } from '../../../utils/utils';\nexport default function updateSlides() {\n  var swiper = this;\n\n  var getDirectionLabel = function getDirectionLabel(property) {\n    if (swiper.isHorizontal()) {\n      return property;\n    } // prettier-ignore\n\n\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  };\n\n  var getDirectionPropertyValue = function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n  };\n\n  var params = swiper.params;\n  var $wrapperEl = swiper.$wrapperEl,\n      swiperSize = swiper.size,\n      rtl = swiper.rtlTranslate,\n      wrongRTL = swiper.wrongRTL;\n  var isVirtual = swiper.virtual && params.virtual.enabled;\n  var previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  var slides = $wrapperEl.children(\".\" + swiper.params.slideClass);\n  var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  var snapGrid = [];\n  var slidesGrid = [];\n  var slidesSizesGrid = [];\n\n  function slidesForMargin(slideEl, slideIndex) {\n    if (!params.cssMode) return true;\n\n    if (slideIndex === slides.length - 1) {\n      return false;\n    }\n\n    return true;\n  }\n\n  var offsetBefore = params.slidesOffsetBefore;\n\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  var offsetAfter = params.slidesOffsetAfter;\n\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  var previousSnapGridLength = swiper.snapGrid.length;\n  var previousSlidesGridLength = swiper.slidesGrid.length;\n  var spaceBetween = params.spaceBetween;\n  var slidePosition = -offsetBefore;\n  var prevSlideSize = 0;\n  var index = 0;\n\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween; // reset margins\n\n  if (rtl) slides.css({\n    marginLeft: '',\n    marginTop: ''\n  });else slides.css({\n    marginRight: '',\n    marginBottom: ''\n  });\n  var slidesNumberEvenToRows;\n\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  } // Calc slides\n\n\n  var slideSize;\n  var slidesPerColumn = params.slidesPerColumn;\n  var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  var numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n\n  for (var i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    var slide = slides.eq(i);\n\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      var newSlideOrderIndex = void 0;\n      var column = void 0;\n      var row = void 0;\n\n      if (params.slidesPerColumnFill === 'row' && params.slidesPerGroup > 1) {\n        var groupIndex = Math.floor(i / (params.slidesPerGroup * params.slidesPerColumn));\n        var slideIndexInGroup = i - params.slidesPerColumn * params.slidesPerGroup * groupIndex;\n        var columnsInGroup = groupIndex === 0 ? params.slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * slidesPerColumn * params.slidesPerGroup) / slidesPerColumn), params.slidesPerGroup);\n        row = Math.floor(slideIndexInGroup / columnsInGroup);\n        column = slideIndexInGroup - row * columnsInGroup + groupIndex * params.slidesPerGroup;\n        newSlideOrderIndex = column + row * slidesNumberEvenToRows / slidesPerColumn;\n        slide.css({\n          '-webkit-box-ordinal-group': newSlideOrderIndex,\n          '-moz-box-ordinal-group': newSlideOrderIndex,\n          '-ms-flex-order': newSlideOrderIndex,\n          '-webkit-order': newSlideOrderIndex,\n          order: newSlideOrderIndex\n        });\n      } else if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - column * slidesPerColumn;\n\n        if (column > numFullColumns || column === numFullColumns && row === slidesPerColumn - 1) {\n          row += 1;\n\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - row * slidesPerRow;\n      }\n\n      slide.css(getDirectionLabel('margin-top'), row !== 0 && params.spaceBetween && params.spaceBetween + \"px\");\n    }\n\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      var slideStyles = getComputedStyle(slide[0]);\n      var currentTransform = slide[0].style.transform;\n      var currentWebKitTransform = slide[0].style.webkitTransform;\n\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        var width = getDirectionPropertyValue(slideStyles, 'width');\n        var paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        var paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        var marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        var marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        var boxSizing = slideStyles.getPropertyValue('box-sizing');\n\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          var _slide$ = slide[0],\n              clientWidth = _slide$.clientWidth,\n              offsetWidth = _slide$.offsetWidth;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        slides[i].style[getDirectionLabel('width')] = slideSize + \"px\";\n      }\n    }\n\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n\n    slidesSizesGrid.push(slideSize);\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  var newSlidesGrid;\n\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({\n      width: swiper.virtualSize + params.spaceBetween + \"px\"\n    });\n  }\n\n  if (params.setWrapperSize) {\n    var _$wrapperEl$css;\n\n    $wrapperEl.css((_$wrapperEl$css = {}, _$wrapperEl$css[getDirectionLabel('width')] = swiper.virtualSize + params.spaceBetween + \"px\", _$wrapperEl$css));\n  }\n\n  if (params.slidesPerColumn > 1) {\n    var _$wrapperEl$css2;\n\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    $wrapperEl.css((_$wrapperEl$css2 = {}, _$wrapperEl$css2[getDirectionLabel('width')] = swiper.virtualSize + params.spaceBetween + \"px\", _$wrapperEl$css2));\n\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n\n      for (var _i = 0; _i < snapGrid.length; _i += 1) {\n        var slidesGridItem = snapGrid[_i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[_i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n\n      snapGrid = newSlidesGrid;\n    }\n  } // Remove last grid elements depending on width\n\n\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n\n    for (var _i2 = 0; _i2 < snapGrid.length; _i2 += 1) {\n      var _slidesGridItem = snapGrid[_i2];\n      if (params.roundLengths) _slidesGridItem = Math.floor(_slidesGridItem);\n\n      if (snapGrid[_i2] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(_slidesGridItem);\n      }\n    }\n\n    snapGrid = newSlidesGrid;\n\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    var _slides$filter$css;\n\n    var key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n    slides.filter(slidesForMargin).css((_slides$filter$css = {}, _slides$filter$css[key] = spaceBetween + \"px\", _slides$filter$css));\n  }\n\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    var allSlidesSize = 0;\n    slidesSizesGrid.forEach(function (slideSizeValue) {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    var maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(function (snap) {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n\n  if (params.centerInsufficientSlides) {\n    var _allSlidesSize = 0;\n    slidesSizesGrid.forEach(function (slideSizeValue) {\n      _allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    _allSlidesSize -= params.spaceBetween;\n\n    if (_allSlidesSize < swiperSize) {\n      var allSlidesOffset = (swiperSize - _allSlidesSize) / 2;\n      snapGrid.forEach(function (snap, snapIndex) {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach(function (snap, snapIndex) {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  extend(swiper, {\n    slides: slides,\n    snapGrid: snapGrid,\n    slidesGrid: slidesGrid,\n    slidesSizesGrid: slidesSizesGrid\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}","map":{"version":3,"sources":["C:/Users/User/EthereumRoullette/dapp/client/node_modules/swiper/esm/components/core/update/updateSlides.js"],"names":["extend","updateSlides","swiper","getDirectionLabel","property","isHorizontal","getDirectionPropertyValue","node","label","parseFloat","getPropertyValue","params","$wrapperEl","swiperSize","size","rtl","rtlTranslate","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","length","children","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","slidesForMargin","slideEl","slideIndex","cssMode","offsetBefore","slidesOffsetBefore","call","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","spaceBetween","slidePosition","prevSlideSize","index","indexOf","replace","virtualSize","css","marginLeft","marginTop","marginRight","marginBottom","slidesNumberEvenToRows","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slideSize","slidesPerRow","numFullColumns","i","slide","eq","newSlideOrderIndex","column","row","slidesPerGroup","groupIndex","slideIndexInGroup","columnsInGroup","min","order","slideStyles","getComputedStyle","currentTransform","style","transform","currentWebKitTransform","webkitTransform","roundLengths","outerWidth","outerHeight","width","paddingLeft","paddingRight","boxSizing","_slide$","clientWidth","offsetWidth","swiperSlideSize","push","centeredSlides","abs","slidesPerGroupSkip","newSlidesGrid","effect","setWrapperSize","_$wrapperEl$css","_$wrapperEl$css2","_i","slidesGridItem","_i2","_slidesGridItem","_slides$filter$css","key","filter","centeredSlidesBounds","allSlidesSize","forEach","slideSizeValue","maxSnap","map","snap","centerInsufficientSlides","_allSlidesSize","allSlidesOffset","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset"],"mappings":"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","sourcesContent":["import { extend } from '../../../utils/utils';\nexport default function updateSlides() {\n  var swiper = this;\n\n  var getDirectionLabel = function getDirectionLabel(property) {\n    if (swiper.isHorizontal()) {\n      return property;\n    } // prettier-ignore\n\n\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  };\n\n  var getDirectionPropertyValue = function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n  };\n\n  var params = swiper.params;\n  var $wrapperEl = swiper.$wrapperEl,\n      swiperSize = swiper.size,\n      rtl = swiper.rtlTranslate,\n      wrongRTL = swiper.wrongRTL;\n  var isVirtual = swiper.virtual && params.virtual.enabled;\n  var previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  var slides = $wrapperEl.children(\".\" + swiper.params.slideClass);\n  var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  var snapGrid = [];\n  var slidesGrid = [];\n  var slidesSizesGrid = [];\n\n  function slidesForMargin(slideEl, slideIndex) {\n    if (!params.cssMode) return true;\n\n    if (slideIndex === slides.length - 1) {\n      return false;\n    }\n\n    return true;\n  }\n\n  var offsetBefore = params.slidesOffsetBefore;\n\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  var offsetAfter = params.slidesOffsetAfter;\n\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  var previousSnapGridLength = swiper.snapGrid.length;\n  var previousSlidesGridLength = swiper.slidesGrid.length;\n  var spaceBetween = params.spaceBetween;\n  var slidePosition = -offsetBefore;\n  var prevSlideSize = 0;\n  var index = 0;\n\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween; // reset margins\n\n  if (rtl) slides.css({\n    marginLeft: '',\n    marginTop: ''\n  });else slides.css({\n    marginRight: '',\n    marginBottom: ''\n  });\n  var slidesNumberEvenToRows;\n\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  } // Calc slides\n\n\n  var slideSize;\n  var slidesPerColumn = params.slidesPerColumn;\n  var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  var numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n\n  for (var i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    var slide = slides.eq(i);\n\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      var newSlideOrderIndex = void 0;\n      var column = void 0;\n      var row = void 0;\n\n      if (params.slidesPerColumnFill === 'row' && params.slidesPerGroup > 1) {\n        var groupIndex = Math.floor(i / (params.slidesPerGroup * params.slidesPerColumn));\n        var slideIndexInGroup = i - params.slidesPerColumn * params.slidesPerGroup * groupIndex;\n        var columnsInGroup = groupIndex === 0 ? params.slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * slidesPerColumn * params.slidesPerGroup) / slidesPerColumn), params.slidesPerGroup);\n        row = Math.floor(slideIndexInGroup / columnsInGroup);\n        column = slideIndexInGroup - row * columnsInGroup + groupIndex * params.slidesPerGroup;\n        newSlideOrderIndex = column + row * slidesNumberEvenToRows / slidesPerColumn;\n        slide.css({\n          '-webkit-box-ordinal-group': newSlideOrderIndex,\n          '-moz-box-ordinal-group': newSlideOrderIndex,\n          '-ms-flex-order': newSlideOrderIndex,\n          '-webkit-order': newSlideOrderIndex,\n          order: newSlideOrderIndex\n        });\n      } else if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - column * slidesPerColumn;\n\n        if (column > numFullColumns || column === numFullColumns && row === slidesPerColumn - 1) {\n          row += 1;\n\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - row * slidesPerRow;\n      }\n\n      slide.css(getDirectionLabel('margin-top'), row !== 0 && params.spaceBetween && params.spaceBetween + \"px\");\n    }\n\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      var slideStyles = getComputedStyle(slide[0]);\n      var currentTransform = slide[0].style.transform;\n      var currentWebKitTransform = slide[0].style.webkitTransform;\n\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        var width = getDirectionPropertyValue(slideStyles, 'width');\n        var paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        var paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        var marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        var marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        var boxSizing = slideStyles.getPropertyValue('box-sizing');\n\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          var _slide$ = slide[0],\n              clientWidth = _slide$.clientWidth,\n              offsetWidth = _slide$.offsetWidth;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        slides[i].style[getDirectionLabel('width')] = slideSize + \"px\";\n      }\n    }\n\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n\n    slidesSizesGrid.push(slideSize);\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  var newSlidesGrid;\n\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({\n      width: swiper.virtualSize + params.spaceBetween + \"px\"\n    });\n  }\n\n  if (params.setWrapperSize) {\n    var _$wrapperEl$css;\n\n    $wrapperEl.css((_$wrapperEl$css = {}, _$wrapperEl$css[getDirectionLabel('width')] = swiper.virtualSize + params.spaceBetween + \"px\", _$wrapperEl$css));\n  }\n\n  if (params.slidesPerColumn > 1) {\n    var _$wrapperEl$css2;\n\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    $wrapperEl.css((_$wrapperEl$css2 = {}, _$wrapperEl$css2[getDirectionLabel('width')] = swiper.virtualSize + params.spaceBetween + \"px\", _$wrapperEl$css2));\n\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n\n      for (var _i = 0; _i < snapGrid.length; _i += 1) {\n        var slidesGridItem = snapGrid[_i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[_i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n\n      snapGrid = newSlidesGrid;\n    }\n  } // Remove last grid elements depending on width\n\n\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n\n    for (var _i2 = 0; _i2 < snapGrid.length; _i2 += 1) {\n      var _slidesGridItem = snapGrid[_i2];\n      if (params.roundLengths) _slidesGridItem = Math.floor(_slidesGridItem);\n\n      if (snapGrid[_i2] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(_slidesGridItem);\n      }\n    }\n\n    snapGrid = newSlidesGrid;\n\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    var _slides$filter$css;\n\n    var key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n    slides.filter(slidesForMargin).css((_slides$filter$css = {}, _slides$filter$css[key] = spaceBetween + \"px\", _slides$filter$css));\n  }\n\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    var allSlidesSize = 0;\n    slidesSizesGrid.forEach(function (slideSizeValue) {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    var maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(function (snap) {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n\n  if (params.centerInsufficientSlides) {\n    var _allSlidesSize = 0;\n    slidesSizesGrid.forEach(function (slideSizeValue) {\n      _allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    _allSlidesSize -= params.spaceBetween;\n\n    if (_allSlidesSize < swiperSize) {\n      var allSlidesOffset = (swiperSize - _allSlidesSize) / 2;\n      snapGrid.forEach(function (snap, snapIndex) {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach(function (snap, snapIndex) {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  extend(swiper, {\n    slides: slides,\n    snapGrid: snapGrid,\n    slidesGrid: slidesGrid,\n    slidesSizesGrid: slidesSizesGrid\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}"]},"metadata":{},"sourceType":"module"}