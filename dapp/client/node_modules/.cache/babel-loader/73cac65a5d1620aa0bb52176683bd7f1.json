{"ast":null,"code":"import { getWindow } from 'ssr-window';\nimport { getSupport } from './get-support';\nvar device;\n\nfunction calcDevice(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      userAgent = _ref.userAgent;\n\n  var support = getSupport();\n  var window = getWindow();\n  var platform = window.navigator.platform;\n  var ua = userAgent || window.navigator.userAgent;\n  var device = {\n    ios: false,\n    android: false\n  };\n  var screenWidth = window.screen.width;\n  var screenHeight = window.screen.height;\n  var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n\n  var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  var iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  var windows = platform === 'Win32';\n  var macos = platform === 'MacIntel'; // iPadOs 13 fix\n\n  var iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(screenWidth + \"x\" + screenHeight) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  } // Android\n\n\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  } // Export object\n\n\n  return device;\n}\n\nfunction getDevice(overrides) {\n  if (overrides === void 0) {\n    overrides = {};\n  }\n\n  if (!device) {\n    device = calcDevice(overrides);\n  }\n\n  return device;\n}\n\nexport { getDevice };","map":{"version":3,"sources":["C:/Users/User/EthereumRoullette/dapp/client/node_modules/swiper/esm/utils/get-device.js"],"names":["getWindow","getSupport","device","calcDevice","_temp","_ref","userAgent","support","window","platform","navigator","ua","ios","android","screenWidth","screen","width","screenHeight","height","match","ipad","ipod","iphone","windows","macos","iPadScreens","touch","indexOf","os","getDevice","overrides"],"mappings":"AAAA,SAASA,SAAT,QAA0B,YAA1B;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,IAAIC,MAAJ;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,MAAIC,IAAI,GAAGD,KAAK,KAAK,KAAK,CAAf,GAAmB,EAAnB,GAAwBA,KAAnC;AAAA,MACIE,SAAS,GAAGD,IAAI,CAACC,SADrB;;AAGA,MAAIC,OAAO,GAAGN,UAAU,EAAxB;AACA,MAAIO,MAAM,GAAGR,SAAS,EAAtB;AACA,MAAIS,QAAQ,GAAGD,MAAM,CAACE,SAAP,CAAiBD,QAAhC;AACA,MAAIE,EAAE,GAAGL,SAAS,IAAIE,MAAM,CAACE,SAAP,CAAiBJ,SAAvC;AACA,MAAIJ,MAAM,GAAG;AACXU,IAAAA,GAAG,EAAE,KADM;AAEXC,IAAAA,OAAO,EAAE;AAFE,GAAb;AAIA,MAAIC,WAAW,GAAGN,MAAM,CAACO,MAAP,CAAcC,KAAhC;AACA,MAAIC,YAAY,GAAGT,MAAM,CAACO,MAAP,CAAcG,MAAjC;AACA,MAAIL,OAAO,GAAGF,EAAE,CAACQ,KAAH,CAAS,6BAAT,CAAd,CAdyB,CAc8B;;AAEvD,MAAIC,IAAI,GAAGT,EAAE,CAACQ,KAAH,CAAS,sBAAT,CAAX;AACA,MAAIE,IAAI,GAAGV,EAAE,CAACQ,KAAH,CAAS,yBAAT,CAAX;AACA,MAAIG,MAAM,GAAG,CAACF,IAAD,IAAST,EAAE,CAACQ,KAAH,CAAS,4BAAT,CAAtB;AACA,MAAII,OAAO,GAAGd,QAAQ,KAAK,OAA3B;AACA,MAAIe,KAAK,GAAGf,QAAQ,KAAK,UAAzB,CApByB,CAoBY;;AAErC,MAAIgB,WAAW,GAAG,CAAC,WAAD,EAAc,WAAd,EAA2B,UAA3B,EAAuC,UAAvC,EAAmD,UAAnD,EAA+D,UAA/D,EAA2E,UAA3E,EAAuF,UAAvF,EAAmG,UAAnG,EAA+G,UAA/G,EAA2H,UAA3H,EAAuI,UAAvI,CAAlB;;AAEA,MAAI,CAACL,IAAD,IAASI,KAAT,IAAkBjB,OAAO,CAACmB,KAA1B,IAAmCD,WAAW,CAACE,OAAZ,CAAoBb,WAAW,GAAG,GAAd,GAAoBG,YAAxC,KAAyD,CAAhG,EAAmG;AACjGG,IAAAA,IAAI,GAAGT,EAAE,CAACQ,KAAH,CAAS,qBAAT,CAAP;AACA,QAAI,CAACC,IAAL,EAAWA,IAAI,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,QAAP,CAAP;AACXI,IAAAA,KAAK,GAAG,KAAR;AACD,GA5BwB,CA4BvB;;;AAGF,MAAIX,OAAO,IAAI,CAACU,OAAhB,EAAyB;AACvBrB,IAAAA,MAAM,CAAC0B,EAAP,GAAY,SAAZ;AACA1B,IAAAA,MAAM,CAACW,OAAP,GAAiB,IAAjB;AACD;;AAED,MAAIO,IAAI,IAAIE,MAAR,IAAkBD,IAAtB,EAA4B;AAC1BnB,IAAAA,MAAM,CAAC0B,EAAP,GAAY,KAAZ;AACA1B,IAAAA,MAAM,CAACU,GAAP,GAAa,IAAb;AACD,GAvCwB,CAuCvB;;;AAGF,SAAOV,MAAP;AACD;;AAED,SAAS2B,SAAT,CAAmBC,SAAnB,EAA8B;AAC5B,MAAIA,SAAS,KAAK,KAAK,CAAvB,EAA0B;AACxBA,IAAAA,SAAS,GAAG,EAAZ;AACD;;AAED,MAAI,CAAC5B,MAAL,EAAa;AACXA,IAAAA,MAAM,GAAGC,UAAU,CAAC2B,SAAD,CAAnB;AACD;;AAED,SAAO5B,MAAP;AACD;;AAED,SAAS2B,SAAT","sourcesContent":["import { getWindow } from 'ssr-window';\nimport { getSupport } from './get-support';\nvar device;\n\nfunction calcDevice(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      userAgent = _ref.userAgent;\n\n  var support = getSupport();\n  var window = getWindow();\n  var platform = window.navigator.platform;\n  var ua = userAgent || window.navigator.userAgent;\n  var device = {\n    ios: false,\n    android: false\n  };\n  var screenWidth = window.screen.width;\n  var screenHeight = window.screen.height;\n  var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n\n  var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  var iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  var windows = platform === 'Win32';\n  var macos = platform === 'MacIntel'; // iPadOs 13 fix\n\n  var iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(screenWidth + \"x\" + screenHeight) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  } // Android\n\n\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  } // Export object\n\n\n  return device;\n}\n\nfunction getDevice(overrides) {\n  if (overrides === void 0) {\n    overrides = {};\n  }\n\n  if (!device) {\n    device = calcDevice(overrides);\n  }\n\n  return device;\n}\n\nexport { getDevice };"]},"metadata":{},"sourceType":"module"}