{"ast":null,"code":"import _objectSpread from \"/Users/MMayaguari/Documents/GitHub/EthereumRoullette/dapp/packages/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/MMayaguari/Documents/GitHub/EthereumRoullette/dapp/packages/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/MMayaguari/Documents/GitHub/EthereumRoullette/dapp/packages/frontend/src/Profile/Profile.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport './Profile.css';\nimport jwtDecode from 'jwt-decode';\nimport React, { useState, useEffect } from 'react';\nimport Blockies from 'react-blockies';\nexport var Profile = function Profile(_ref) {\n  _s();\n\n  var auth = _ref.auth,\n      onLoggedOut = _ref.onLoggedOut;\n\n  var _useState = useState({\n    loading: false,\n    user: undefined,\n    username: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  useEffect(function () {\n    var accessToken = auth.accessToken;\n\n    var _jwtDecode = jwtDecode(accessToken),\n        id = _jwtDecode.payload.id;\n\n    fetch(\"\".concat(process.env.REACT_APP_BACKEND_URL, \"/users/\").concat(id), {\n      headers: {\n        Authorization: \"Bearer \".concat(accessToken)\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (user) {\n      return setState(_objectSpread(_objectSpread({}, state), {}, {\n        user\n      }));\n    }).catch(window.alert);\n  }, []);\n\n  var handleChange = function handleChange(_ref2) {\n    var value = _ref2.target.value;\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      username: value\n    }));\n  };\n\n  var handleSubmit = function handleSubmit() {\n    var accessToken = auth.accessToken;\n    var user = state.user,\n        username = state.username;\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      loading: true\n    }));\n\n    if (!user) {\n      window.alert('The user id has not been fetched yet. Please try again in 5 seconds.');\n      return;\n    }\n\n    fetch(\"\".concat(process.env.REACT_APP_BACKEND_URL, \"/users/\").concat(user.id), {\n      body: JSON.stringify({\n        username\n      }),\n      headers: {\n        Authorization: \"Bearer \".concat(accessToken),\n        'Content-Type': 'application/json'\n      },\n      method: 'PATCH'\n    }).then(function (response) {\n      return response.json();\n    }).then(function (user) {\n      return setState(_objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        user\n      }));\n    }).catch(function (err) {\n      window.alert(err);\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        loading: false\n      }));\n    });\n  };\n\n  var accessToken = auth.accessToken;\n\n  var _jwtDecode2 = jwtDecode(accessToken),\n      publicAddress = _jwtDecode2.payload.publicAddress;\n\n  var loading = state.loading,\n      user = state.user;\n  var username = user && user.username;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Profile\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Logged in as \", /*#__PURE__*/_jsxDEV(Blockies, {\n        seed: publicAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 18\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"My username is \", username ? /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 32\n      }, _this) : 'not set.', ' ', \"My publicAddress is \", /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: publicAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Change username: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"username\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: loading,\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onLoggedOut,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(Profile, \"0RAkSdNYNolmYpiC4WRfCwUcUYo=\");\n\n_c = Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/MMayaguari/Documents/GitHub/EthereumRoullette/dapp/packages/frontend/src/Profile/Profile.tsx"],"names":["jwtDecode","React","useState","useEffect","Blockies","Profile","auth","onLoggedOut","loading","user","undefined","username","state","setState","accessToken","id","payload","fetch","process","env","REACT_APP_BACKEND_URL","headers","Authorization","then","response","json","catch","window","alert","handleChange","value","target","handleSubmit","body","JSON","stringify","method","err","publicAddress"],"mappings":"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","sourcesContent":["import './Profile.css';\n\nimport jwtDecode from 'jwt-decode';\nimport React, { useState, useEffect } from 'react';\nimport Blockies from 'react-blockies';\n\nimport { Auth } from '../types';\n\ninterface Props {\n\tauth: Auth;\n\tonLoggedOut: () => void;\n}\n\ninterface State {\n\tloading: boolean;\n\tuser?: {\n\t\tid: number;\n\t\tusername: string;\n\t};\n\tusername: string;\n}\n\ninterface JwtDecoded {\n\tpayload: {\n\t\tid: string;\n\t\tpublicAddress: string;\n\t};\n}\n\nexport const Profile = ({ auth, onLoggedOut }: Props): JSX.Element => {\n\tconst [state, setState] = useState<State>({\n\t\tloading: false,\n\t\tuser: undefined,\n\t\tusername: '',\n\t});\n\n\tuseEffect(() => {\n\t\tconst { accessToken } = auth;\n\t\tconst {\n\t\t\tpayload: { id },\n\t\t} = jwtDecode<JwtDecoded>(accessToken);\n\n\t\tfetch(`${process.env.REACT_APP_BACKEND_URL}/users/${id}`, {\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${accessToken}`,\n\t\t\t},\n\t\t})\n\t\t\t.then((response) => response.json())\n\t\t\t.then((user) => setState({ ...state, user }))\n\t\t\t.catch(window.alert);\n\t}, []);\n\n\tconst handleChange = ({\n\t\ttarget: { value },\n\t}: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetState({ ...state, username: value });\n\t};\n\n\tconst handleSubmit = () => {\n\t\tconst { accessToken } = auth;\n\t\tconst { user, username } = state;\n\n\t\tsetState({ ...state, loading: true });\n\n\t\tif (!user) {\n\t\t\twindow.alert(\n\t\t\t\t'The user id has not been fetched yet. Please try again in 5 seconds.'\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tfetch(`${process.env.REACT_APP_BACKEND_URL}/users/${user.id}`, {\n\t\t\tbody: JSON.stringify({ username }),\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${accessToken}`,\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tmethod: 'PATCH',\n\t\t})\n\t\t\t.then((response) => response.json())\n\t\t\t.then((user) => setState({ ...state, loading: false, user }))\n\t\t\t.catch((err) => {\n\t\t\t\twindow.alert(err);\n\t\t\t\tsetState({ ...state, loading: false });\n\t\t\t});\n\t};\n\n\tconst { accessToken } = auth;\n\n\tconst {\n\t\tpayload: { publicAddress },\n\t} = jwtDecode<JwtDecoded>(accessToken);\n\n\tconst { loading, user } = state;\n\n\tconst username = user && user.username;\n\n\treturn (\n\t\t<div className=\"Profile\">\n\t\t\t<p>\n\t\t\t\tLogged in as <Blockies seed={publicAddress} />\n\t\t\t</p>\n\t\t\t<div>\n\t\t\t\tMy username is {username ? <pre>{username}</pre> : 'not set.'}{' '}\n\t\t\t\tMy publicAddress is <pre>{publicAddress}</pre>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<label htmlFor=\"username\">Change username: </label>\n\t\t\t\t<input name=\"username\" onChange={handleChange} />\n\t\t\t\t<button disabled={loading} onClick={handleSubmit}>\n\t\t\t\t\tSubmit\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<p>\n\t\t\t\t<button onClick={onLoggedOut}>Logout</button>\n\t\t\t</p>\n\t\t</div>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}